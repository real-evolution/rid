//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub is_active: Option<bool>,
    pub display_name: Option<String>,
    pub profile_pic_url: Option<String>,
    pub cached_total_rid: Option<Decimal>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::transaction::Entity")]
    Transaction,
    #[sea_orm(has_many = "super::oauth2_login_method::Entity")]
    Oauth2LoginMethod,
    #[sea_orm(has_many = "super::crypto_wallet::Entity")]
    CryptoWallet,
}

impl Related<super::transaction::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Transaction.def()
    }
}

impl Related<super::oauth2_login_method::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Oauth2LoginMethod.def()
    }
}

impl Related<super::crypto_wallet::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CryptoWallet.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
